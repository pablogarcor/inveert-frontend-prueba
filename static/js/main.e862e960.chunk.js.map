{"version":3,"sources":["assets/images/Logotipo-Inveert-Fondo-Blanco-copy.png","services/user/userGetAll.js","components/header/HeaderMain.js","screens/primeraVista/PrimeraVista.js","services/user/userGet.js","screens/segundaVista/SegundaVista.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setColumnData","setLoading","a","axios","get","headers","Header","Layout","Title","Typography","HeaderMain","history","useHistory","useState","isMenuVisible","setIsMenuVisible","useEffect","idx","_","location","pathname","style","background","padding","to","className","src","logo","alt","color","lineHeight","float","cursor","level","strong","onClick","goBack","LeftOutlined","Content","columns","title","dataIndex","key","PrimeraVista","loading","columnData","userGetAll","then","response","processedResponse","data","map","user","id","name","email","phone","catch","notification","error","message","description","duration","finally","justify","marginTop","align","pagination","defaultPageSize","onRow","record","rowIndex","event","push","state","userId","dataSource","Meta","Card","Panel","Collapse","SegundaVista","userInfo","setUserInfo","setUserId","userGet","active","underline","xs","sm","md","lg","xl","width","margin","avatar","size","icon","UserOutlined","username","layout","Item","label","disabled","defaultValue","addonBefore","PhoneOutlined","MailOutlined","header","extra","BankOutlined","company","catchPhrase","MessageOutlined","bs","BookOutlined","EnvironmentOutlined","address","street","city","HomeOutlined","App","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.e862e960.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logotipo-Inveert-Fondo-Blanco-copy.d453ac87.png\";","import axios from 'axios'\r\n\r\nexport async function userGetAll(setColumnData, setLoading) {\r\n    return await axios.get(\"https://jsonplaceholder.typicode.com/users\",{headers:{\"Content-Type\":\"application/json\"}})\r\n}","import React, {useState,useEffect} from \"react\";\r\n//Internal exports\r\nimport logo from '../../assets/images/Logotipo-Inveert-Fondo-Blanco-copy.png'\r\n//External exports\r\nimport {LeftOutlined} from \"@ant-design/icons\";\r\nimport idx from 'idx'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Layout,Typography} from \"antd\";\r\nimport {Link} from 'react-router-dom'\r\n//Global constants and objects\r\nconst {Header}=Layout\r\nconst {Title}=Typography\r\n\r\nfunction HeaderMain() {\r\n    const history=useHistory()\r\n    const [isMenuVisible,setIsMenuVisible]=useState(false)\r\n    useEffect(()=>{\r\n        if(idx(history,(_)=>_.location.pathname)==='/inveert-frontend-prueba'){\r\n            setIsMenuVisible(false)\r\n        }else{\r\n            setIsMenuVisible(true)\r\n        }\r\n    },[history])\r\n    return(\r\n        <Header style={{background:\"white\", padding: \"0 10px\"}}>\r\n            <Link to=\"/inveert-frontend-prueba\">\r\n                <img className=\"logo\" src={logo} alt=\"Prueba de inveert\"/>\r\n            </Link>\r\n            {isMenuVisible &&\r\n            <Title style={{color:'black', lineHeight: '64px', float: \"right\", cursor:'pointer'}} level={4} strong onClick={()=> {\r\n                history.goBack()\r\n            }}><LeftOutlined/>Atr√°s</Title>\r\n            }\r\n        </Header>\r\n    )\r\n}\r\nexport default HeaderMain","import React, {useState,useEffect} from \"react\";\r\n//Internal exports\r\nimport {userGetAll} from \"../../services/user/userGetAll\";\r\nimport HeaderMain from \"../../components/header/HeaderMain\";\r\n//External exports\r\nimport {Layout, Row, Col, Typography, Table, notification} from \"antd\";\r\nimport {useHistory} from 'react-router-dom'\r\n//Global constants and objects\r\nconst {Title}=Typography\r\nconst {Content}=Layout\r\nconst columns=[\r\n    {\r\n        title: 'Nombre y apellidos',\r\n        dataIndex:'name',\r\n        key:'name'\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'email',\r\n        key: 'email'\r\n    },\r\n    {\r\n        title: 'Telefono',\r\n        dataIndex: 'phone',\r\n        key: 'phone'\r\n    }\r\n]\r\n\r\nfunction PrimeraVista(){\r\n    const history=useHistory()\r\n    const [loading,setLoading]=useState(true)\r\n    const [columnData,setColumnData]=useState([])\r\n    /*\r\n        columnData[\r\n            User1{\r\n                key,\r\n                name,\r\n                phone,\r\n                email\r\n            },\r\n            User2{\r\n                key,\r\n                name,\r\n                phone,\r\n                email\r\n            }\r\n            ...\r\n        ]\r\n     */\r\n    useEffect(()=>{\r\n            userGetAll(setColumnData,setLoading).then((response)=>{\r\n                const processedResponse=response.data.map(user=>({key:user.id,name:user.name,email:user.email,phone:user.phone}))\r\n                setColumnData(processedResponse)\r\n            }).catch(()=>{\r\n                notification.error({\r\n                    message:\"Datos innaccesibles\",\r\n                    description:\"No se ha podido acceder a los datos de los usuarios\",\r\n                    duration:10,\r\n                    onClick:()=>{\r\n\r\n                    }\r\n                })\r\n            }).finally(()=>{\r\n                setLoading(false)\r\n                })\r\n        },[]);\r\n    return(\r\n        <Layout>\r\n            <HeaderMain/>\r\n            <Content>\r\n                <Row justify=\"center\">\r\n                    <Col className=\"padding-10\">\r\n                        <Title level={2} strong style={{marginTop:\"50px\"}}>Tabla de la <b style={{color: \"rgb(0, 139, 154)\"}}>primera</b> vista</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify='center' align='middle' >\r\n                    <Table\r\n                        className=\"user-table\"\r\n                        pagination={{defaultPageSize:5}}\r\n                        onRow={(record, rowIndex) => {\r\n                            return {\r\n                                onClick: event => {history.push({\r\n                                    pathname:\"/userDetail/\"+record.key,\r\n                                    state: {userId: record.key}\r\n                                })}\r\n                            };\r\n                        }}\r\n\r\n                        loading={loading} dataSource={columnData} columns={columns}/>\r\n                </Row>\r\n            </Content>\r\n        </Layout>\r\n\r\n    )\r\n}\r\nexport default PrimeraVista","import axios from 'axios'\r\n\r\nexport async function userGet(userId) {\r\n        return await axios.get(\"https://jsonplaceholder.typicode.com/users/\"+userId,{headers:{\"Content-Type\":\"application/json\"}})\r\n}","import React, {useState,useEffect} from \"react\";\r\n//Internal exports\r\nimport {userGet} from \"../../services/user/userGet\";\r\nimport HeaderMain from \"../../components/header/HeaderMain\";\r\n//External exports\r\nimport {Layout, Row, Col, Typography, Form, Input, Skeleton, Card, Avatar, Collapse, notification} from \"antd\";\r\nimport {UserOutlined,BankOutlined,PhoneOutlined,MailOutlined,MessageOutlined,BookOutlined,HomeOutlined,EnvironmentOutlined} from \"@ant-design/icons\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport idx from   'idx'\r\n//Global constants and objects\r\nconst {Title}=Typography\r\nconst {Content}=Layout\r\nconst {Meta}=Card\r\nconst { Panel } = Collapse;\r\n\r\nfunction SegundaVista(){\r\n    const history=useHistory()\r\n    const [loading,setLoading]=useState(true)\r\n    /*\r\n    * userInfo\r\n    * {\r\n    *   website\r\n    *   username\r\n    *   phone\r\n    *   id\r\n    *   name\r\n    *   email\r\n    *   company{\r\n    *       bs\r\n    *       catchPhrase\r\n    *       name\r\n    *   }\r\n    *   address{\r\n    *       city\r\n    *       geo{}\r\n    *       street\r\n    *       suite\r\n    *       zipcode\r\n    *   }\r\n    * }\r\n    * */\r\n    const [userInfo,setUserInfo]=useState([])\r\n    const [userId,setUserId]=useState(1)\r\n    useEffect(()=>{\r\n        //idx es una funcion existencial para objetos anidados, si no existe alguna de las propiedades devuelve null\r\n        if(idx(history,(_)=>_.location.state.userId)){\r\n            userGet(history.location.state.userId).then(response=> {\r\n                setUserInfo(response.data)\r\n                setUserId(response.data.id)\r\n            }).catch(()=> notification.error({\r\n                message:\"Datos innaccesibles\",\r\n                description:\"No se ha podido acceder a los datos de los usuarios\",\r\n                duration:10,\r\n                onClick:()=>{\r\n\r\n                }\r\n            })).finally(()=>{setLoading(false)})\r\n        }else{\r\n            history.push({pathname:'/'})\r\n        }\r\n\r\n    },[history]);\r\n    return(\r\n        <Layout>\r\n            <HeaderMain/>\r\n            <Content>\r\n                <Row justify=\"center\">\r\n                    <Col className=\"padding-10\">\r\n                        <Title level={2} strong style={{marginTop:\"50px\"}}>Tabla de la <b style={{color: \"rgb(0, 139, 154)\"}}>segunda</b> vista</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify=\"center\" style={{background:\"white\"}}>\r\n                    <Col className=\"padding-10\">\r\n                        <Skeleton loading={loading} active>\r\n                            <Title level={2} strong underline>Vista detalle del usuario <b style={{color: \"rgb(0, 139, 154)\"}}>n¬∫ {userId}</b></Title>\r\n                        </Skeleton>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify='center' align='middle' style={{background:\"white\"}}>\r\n                    <Col xs={24} sm={18} md={14} lg={10} xl={8}>\r\n                        <Skeleton loading={loading} active>\r\n                            <Card\r\n                                style={{width:\"100%\",margin:\"20px 0\"}}\r\n                            >\r\n                                <Meta\r\n                                    avatar={<Avatar size={64} icon={<UserOutlined />} />}\r\n                                    title={userInfo.name}\r\n                                    description={userInfo.username}\r\n                                />\r\n                            </Card>\r\n                            <Form layout='vertical' style={{width:\"100%\"}}>\r\n                                <Form.Item label=\"Telefono:\">\r\n                                    <Input disabled defaultValue={userInfo.phone} addonBefore={<PhoneOutlined />}/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Email:\">\r\n                                    <Input disabled defaultValue={userInfo.email} addonBefore={<MailOutlined />}/>\r\n                                </Form.Item>\r\n                            </Form>\r\n                            <Collapse >\r\n                                <Panel header=\"Empresa\" key=\"1\" extra={<BankOutlined />}>\r\n                                    <Form layout='vertical' style={{width:\"100%\"}}>\r\n                                        <Form.Item label=\"Nombre:\">\r\n                                            <Input disabled defaultValue={idx(userInfo,(_)=>_.company.name)} addonBefore={<BankOutlined />}/>\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Lema:\">\r\n                                            <Input disabled defaultValue={idx(userInfo,(_)=>_.company.catchPhrase)} addonBefore={<MessageOutlined />}/>\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"B.S.:\">\r\n                                            <Input disabled defaultValue={idx(userInfo,(_)=>_.company.bs)} addonBefore={<BookOutlined />}/>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Panel>\r\n                                <Panel header=\"Direcci√≥n\" key=\"2\" extra={<EnvironmentOutlined />}>\r\n                                    <Form layout='vertical' style={{width:\"100%\"}}>\r\n                                        <Form.Item label=\"Calle:\">\r\n                                            <Input disabled defaultValue={idx(userInfo,(_)=>_.address.street)} addonBefore={<EnvironmentOutlined />}/>\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Ciudad:\">\r\n                                            <Input disabled defaultValue={idx(userInfo,(_)=>_.address.city)} addonBefore={<HomeOutlined />}/>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Panel>\r\n                            </Collapse>,\r\n                        </Skeleton>\r\n                    </Col>\r\n                </Row>\r\n            </Content>\r\n        </Layout>\r\n\r\n    )\r\n}\r\nexport default SegundaVista","import React from 'react';\n//Internal exports\nimport PrimeraVista from \"./screens/primeraVista/PrimeraVista\";\nimport SegundaVista from \"./screens/segundaVista/SegundaVista\";\n//External exports\nimport {Layout} from \"antd\";\nimport {Switch,Route} from \"react-router-dom\";\n\n//Import styles\nimport './App.css';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n          <Route\n              path='/userDetail/:userNumber'\n              component={SegundaVista}\n          />\n        <Route\n          path='/'\n          component={PrimeraVista}\n        />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n\n      <Router>\n        <App />\n      </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}